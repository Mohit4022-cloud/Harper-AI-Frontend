name: Code Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests with coverage
      run: npm test -- --coverage
      env:
        CI: true
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: coverage/
        retention-days: 30
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
    
    - name: Check coverage thresholds
      run: |
        echo "Checking coverage thresholds..."
        npm test -- --coverage --coverageReporters=json-summary
        
        # Extract coverage percentages
        COVERAGE_JSON=$(cat coverage/coverage-summary.json)
        BRANCHES=$(echo $COVERAGE_JSON | jq '.total.branches.pct')
        FUNCTIONS=$(echo $COVERAGE_JSON | jq '.total.functions.pct')
        LINES=$(echo $COVERAGE_JSON | jq '.total.lines.pct')
        STATEMENTS=$(echo $COVERAGE_JSON | jq '.total.statements.pct')
        
        echo "Coverage Results:"
        echo "Branches: $BRANCHES% (threshold: 80%)"
        echo "Functions: $FUNCTIONS% (threshold: 80%)"
        echo "Lines: $LINES% (threshold: 85%)"
        echo "Statements: $STATEMENTS% (threshold: 85%)"
        
        # Check if coverage meets thresholds
        if (( $(echo "$BRANCHES < 80" | bc -l) )); then
          echo "‚ùå Branch coverage is below threshold"
          exit 1
        fi
        
        if (( $(echo "$FUNCTIONS < 80" | bc -l) )); then
          echo "‚ùå Function coverage is below threshold"
          exit 1
        fi
        
        if (( $(echo "$LINES < 85" | bc -l) )); then
          echo "‚ùå Line coverage is below threshold"
          exit 1
        fi
        
        if (( $(echo "$STATEMENTS < 85" | bc -l) )); then
          echo "‚ùå Statement coverage is below threshold"
          exit 1
        fi
        
        echo "‚úÖ All coverage thresholds met!"
    
    - name: Comment PR with coverage
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
          
          const formatPercent = (num) => `${num.toFixed(2)}%`;
          
          let comment = '## üìä Code Coverage Report\n\n';
          comment += '| Metric | Coverage | Threshold | Status |\n';
          comment += '|--------|----------|-----------|--------|\n';
          comment += `| Branches | ${formatPercent(coverage.total.branches.pct)} | 80% | ${coverage.total.branches.pct >= 80 ? '‚úÖ' : '‚ùå'} |\n`;
          comment += `| Functions | ${formatPercent(coverage.total.functions.pct)} | 80% | ${coverage.total.functions.pct >= 80 ? '‚úÖ' : '‚ùå'} |\n`;
          comment += `| Lines | ${formatPercent(coverage.total.lines.pct)} | 85% | ${coverage.total.lines.pct >= 85 ? '‚úÖ' : '‚ùå'} |\n`;
          comment += `| Statements | ${formatPercent(coverage.total.statements.pct)} | 85% | ${coverage.total.statements.pct >= 85 ? '‚úÖ' : '‚ùå'} |\n`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });