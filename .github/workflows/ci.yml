name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Check formatting
      run: npx prettier --check .

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run TypeScript type checking
      run: npm run type-check

  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm test -- --coverage
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: coverage/
        retention-days: 30

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma client
      run: npx prisma generate
    
    - name: Build application
      run: npm run build
      env:
        SKIP_ENV_VALIDATION: true
    
    - name: Check build output
      run: |
        if [ ! -d ".next" ]; then
          echo "Build failed - no .next directory found"
          exit 1
        fi

  security:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --production
      continue-on-error: true
    
    - name: Check for known vulnerabilities
      run: npx audit-ci --config .audit-ci.json
      continue-on-error: true

  e2e-readiness:
    name: E2E Test Readiness
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
    
    - name: Build application
      run: npm run build
      env:
        SKIP_ENV_VALIDATION: true
    
    - name: Run E2E smoke tests
      run: npx playwright test --grep @smoke --project=chromium
      env:
        PLAYWRIGHT_BASE_URL: http://localhost:3000
      continue-on-error: true

  all-checks-passed:
    name: All Checks Passed
    needs: [lint, type-check, test, build, security]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Check results
      run: |
        if [ "${{ needs.lint.result }}" != "success" ] || \
           [ "${{ needs.type-check.result }}" != "success" ] || \
           [ "${{ needs.test.result }}" != "success" ] || \
           [ "${{ needs.build.result }}" != "success" ]; then
          echo "One or more required checks failed"
          exit 1
        fi
        echo "All checks passed!"

  label-pr:
    name: Label PR
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/labeler@v4
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        configuration-path: .github/labeler.yml